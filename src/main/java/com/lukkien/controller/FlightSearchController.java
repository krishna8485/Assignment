package com.lukkien.controller;
import com.lukkien.Exception.NotFoundException;
import com.lukkien.model.FlightResultsResponse;
import com.lukkien.model.Airport;
import com.lukkien.model.JsonResponse;
import com.lukkien.service.FlightService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.servlet.ModelAndView;

import java.util.Date;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
@Controller
public class FlightSearchController {

    @Autowired
    FlightService flightServiceImpl;

    private static final Logger logger = LogManager.getLogger(FlightSearchController.class);


    private final AtomicLong counter = new AtomicLong();
    private static final String template = "Hello, %s!";

    //Website
    //Statics
    //Spring restful-- completed
    //Spring boot -- completed
    @RequestMapping(value ="/getResults" , method = RequestMethod.GET)
    public @ResponseBody
    List<FlightResultsResponse> getResults(@RequestParam("departure")
                                                 Airport departure, @RequestParam("arrival")
            Airport arrival) {
        logger.info("info flight search executed");
        List<FlightResultsResponse> flightsResults = flightServiceImpl.findFlights(departure, arrival);
        logger.info("flightResultsDTo "+ flightsResults.toString());
        return flightsResults;
    }

    @RequestMapping(value ="/getAirportList" , method = {RequestMethod.GET, RequestMethod.POST})
    public @ResponseBody
    List<Airport> getAirportList(@RequestParam(name="query", required=true) String queryString) {
        logger.info("info getAirportNames executed" +queryString);
        return flightServiceImpl.findAirports(queryString);
    }

    @RequestMapping(value ="/getAirportLists" , method = {RequestMethod.GET, RequestMethod.POST})
    public @ResponseBody
    ResponseEntity<JsonResponse> getAirportLists(@RequestParam(name="query", required=true) String queryString) throws NotFoundException {
        logger.info("info getAirportNames executed" +queryString);
        List<Airport> airportList= flightServiceImpl.findAirports(queryString);
        JsonResponse jsonResponse = new JsonResponse(new Date (), "","", airportList);
        if (airportList.size() >0 ){
            logger.info("info getAirportNames are more" );
            return new ResponseEntity<>(jsonResponse, HttpStatus.OK);
        } else {
            throw new NotFoundException("No Data");
        }
    }

    @RequestMapping("/welcome")
    public ModelAndView homePage() {
        return new ModelAndView("FlightSearch");
    }

}